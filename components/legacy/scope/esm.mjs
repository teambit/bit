// eslint-disable-next-line import/no-unresolved
import cjsModule from './index.js';

export const loadScope = cjsModule.loadScope;
export const Scope = cjsModule.Scope;
export const ComponentWithDependencies = cjsModule.ComponentWithDependencies;
export const ActionNotFound = cjsModule.ActionNotFound;
export const BitIdCompIdError = cjsModule.BitIdCompIdError;
export const ClientIdInUse = cjsModule.ClientIdInUse;
export const ComponentNeedsUpdate = cjsModule.ComponentNeedsUpdate;
export const ScopeNotFound = cjsModule.ScopeNotFound;
export const ScopeJsonNotFound = cjsModule.ScopeJsonNotFound;
export const ComponentNotFound = cjsModule.ComponentNotFound;
export const DependenciesNotFound = cjsModule.DependenciesNotFound;
export const ErrorFromRemote = cjsModule.ErrorFromRemote;
export const ExportMissingVersions = cjsModule.ExportMissingVersions;
export const HashNotFound = cjsModule.HashNotFound;
export const MergeConflict = cjsModule.MergeConflict;
export const MergeConflictOnRemote = cjsModule.MergeConflictOnRemote;
export const MissingObjects = cjsModule.MissingObjects;
export const NoCommonSnap = cjsModule.NoCommonSnap;
export const NoHeadNoVersion = cjsModule.NoHeadNoVersion;
export const HashesPerRemotes = cjsModule.HashesPerRemotes;
export const VersionNotFound = cjsModule.VersionNotFound;
export const ParentNotFound = cjsModule.ParentNotFound;
export const VersionAlreadyExists = cjsModule.VersionAlreadyExists;
export const IdNotFoundInGraph = cjsModule.IdNotFoundInGraph;
export const InvalidIndexJson = cjsModule.InvalidIndexJson;
export const OutdatedIndexJson = cjsModule.OutdatedIndexJson;
export const HeadNotFound = cjsModule.HeadNotFound;
export const VersionNotFoundOnFS = cjsModule.VersionNotFoundOnFS;
export const ServerIsBusy = cjsModule.ServerIsBusy;
export const UnknownObjectType = cjsModule.UnknownObjectType;
export const PersistFailed = cjsModule.PersistFailed;
export const VersionInvalid = cjsModule.VersionInvalid;
export const validateType = cjsModule.validateType;
export const RemovedObjects = cjsModule.RemovedObjects;
export const RemovedObjectSerialized = cjsModule.RemovedObjectSerialized;
export const ComponentObjects = cjsModule.ComponentObjects;
export const LaneData = cjsModule.LaneData;
export const serializeLaneData = cjsModule.serializeLaneData;
export const UnmergedComponents = cjsModule.UnmergedComponents;
export const Tmp = cjsModule.Tmp;
export const UnmergedComponent = cjsModule.UnmergedComponent;
export const UNMERGED_FILENAME = cjsModule.UNMERGED_FILENAME;
export const TrackLane = cjsModule.TrackLane;
export const ScopeJson = cjsModule.ScopeJson;
export const StagedSnaps = cjsModule.StagedSnaps;
export const ComponentVersion = cjsModule.ComponentVersion;
export const validateVersionInstance = cjsModule.validateVersionInstance;
export const typesObj = cjsModule.typesObj;
export const typesToObject = cjsModule.typesToObject;
export const Types = cjsModule.Types;
export const GarbageCollectorOpts = cjsModule.GarbageCollectorOpts;
export const ScopeDescriptor = cjsModule.ScopeDescriptor;
export const loadScopeIfExist = cjsModule.loadScopeIfExist;
export const ScopeComponentsImporter = cjsModule.ScopeComponentsImporter;
export const errorIsTypeOfMissingObject = cjsModule.errorIsTypeOfMissingObject;
export const multipleVersionDependenciesToConsumer = cjsModule.multipleVersionDependenciesToConsumer;
export const VersionDependencies = cjsModule.VersionDependencies;
export const MergeResult = cjsModule.MergeResult;
export const RemoteLanes = cjsModule.RemoteLanes;

export default cjsModule;