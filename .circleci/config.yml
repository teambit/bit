version: 2
jobs:
  checkout_code:
    docker:
      -
        image: 'circleci/node:6.14.3'
    working_directory: ~/bit
    steps:
      - checkout
      -
        run:
          name: 'save SHA to a file'
          command: 'echo $CIRCLE_SHA1 > .circle-sha'
      -
        run:
          name: 'clone bit-javascript'
          command: ./scripts/clone-bit-javascript.sh
      -
        persist_to_workspace:
          root: /home/circleci
          paths:
            - bit
            - bit-javascript
  set_ssh_key:
    docker:
      -
        image: 'circleci/node:6.14.3'
    working_directory: ~/.ssh
    steps:
      -
        run: 'echo "-----BEGIN RSA PRIVATE KEY-----" >> ~/.ssh/id_rsa'
      -
        run: 'echo ${testerBitsrcSSHPrivateKey} >> id_rsa'
      -
        run: 'echo "-----END RSA PRIVATE KEY-----" >> ~/.ssh/id_rsa'
      -
        run: 'echo ${testerBitsrcSSHPublicKey} >> id_rsa.pub'
      -
        save_cache:
          key: bitsrc-ssh-key3
          paths:
            - ~/.ssh/id_rsa
            - ~/.ssh/id_rsa.pub
  set_bitsrc_registry:
    docker:
      -
        image: 'circleci/node:6.14.3'
    working_directory: ~/bit
    steps:
      -
        run: 'npm config set @bit:registry https://node-stg.bitsrc.io'
      -
        run: 'echo "//node-stg.bitsrc.io/:_authToken=$registryStgToken" >> ~/.npmrc'
      -
        save_cache:
          key: bitsrc-registry-stg4
          paths:
            - ~/.npmrc
  install_npm_deps:
    docker:
      -
        image: 'circleci/node:6.14.3'
    working_directory: ~/bit
    steps:
      -
        run:
          name: 'save SHA to a file'
          command: 'echo $CIRCLE_SHA1 > .circle-sha'
      -
        attach_workspace:
          at: ./
      -
        restore_cache:
          keys:
            - 'npm-deps11-{{ checksum "./bit/package.json" }}'
            - npm-deps11
      -
        run:
          name: 'Insatll npm dependencies'
          command: 'cd bit && npm install'
      -
        save_cache:
          key: 'npm-deps11-{{ checksum "./bit/package.json" }}'
          paths:
            - ./bit/node_modules
      -
        save_cache:
          key: npm-deps11
          paths:
            - ./bit/node_modules
      -
        persist_to_workspace:
          root: .
          paths:
            - bit/node_modules
  install_bit_javascript_npm_deps:
    docker:
      -
        image: 'circleci/node:6.14.3'
    working_directory: ~/bit
    steps:
      -
        attach_workspace:
          at: ./
      -
        run:
          name: 'Insatll npm dependencies'
          command: 'cd bit-javascript && npm install'
      -
        persist_to_workspace:
          root: .
          paths:
            - bit-javascript/node_modules
  build:
    docker:
      -
        image: 'circleci/node:6.14.3'
    working_directory: ~/bit
    steps:
      -
        run:
          name: 'save SHA to a file'
          command: 'echo $CIRCLE_SHA1 > .circle-sha'
      -
        attach_workspace:
          at: ./
      -
        run:
          name: 'Build bit source code'
          command: 'cd bit && npm run build'
      -
        persist_to_workspace:
          root: .
          paths:
            - bit/dist
  build_bit_javascript:
    docker:
      -
        image: 'circleci/node:6.14.3'
    working_directory: ~/bit
    steps:
      -
        run:
          name: 'save SHA to a file'
          command: 'echo $CIRCLE_SHA1 > .circle-sha'
      -
        attach_workspace:
          at: ./
      -
        run:
          name: 'Build bit javascript source code'
          command: 'cd bit-javascript && npm run build'
      -
        persist_to_workspace:
          root: .
          paths:
            - bit-javascript/dist
  unit_test:
    docker:
      -
        image: 'circleci/node:6.14.3'
    working_directory: ~/bit
    steps:
      -
        run:
          name: 'save SHA to a file'
          command: 'echo $CIRCLE_SHA1 > .circle-sha'
      -
        attach_workspace:
          at: ./
      -
        run: 'cd bit && mkdir junit'
      -
        run:
          name: 'Run unit tests'
          command: 'cd bit && npm run test-circle'
          environment:
            MOCHA_FILE: junit/unit-test-results.xml
          when: always
      -
        store_test_results:
          path: bit/junit
      -
        store_artifacts:
          path: bit/junit
  unit_test_bit_javascript:
    docker:
      -
        image: 'circleci/node:6.14.3'
    working_directory: ~/bit
    steps:
      -
        run:
          name: 'save SHA to a file'
          command: 'echo $CIRCLE_SHA1 > .circle-sha'
      -
        attach_workspace:
          at: ./
      -
        run: 'cd bit-javascript && mkdir junit'
      -
        run:
          name: 'Run unit tests'
          command: 'cd bit-javascript && npm run test-circle'
          environment:
            MOCHA_FILE: junit/unit-test-results.xml
          when: always
      -
        store_test_results:
          path: bit-javascript/junit
      -
        store_artifacts:
          path: bit-javascript/junit
  lint:
    docker:
      -
        image: 'circleci/node:6.14.3'
    working_directory: ~/bit
    steps:
      -
        run:
          name: 'save SHA to a file'
          command: 'echo $CIRCLE_SHA1 > .circle-sha'
      -
        restore_cache:
          keys:
            - 'repo-{{ checksum ".circle-sha" }}'
      -
        attach_workspace:
          at: ./
      -
        run:
          name: 'run ESLint'
          command: 'cd bit && npm run lint-circle'
      -
        store_test_results:
          path: bit/junit
      -
        store_artifacts:
          path: bit/junit
  e2e_test:
    docker:
      -
        image: 'circleci/node:6.14.3'
    working_directory: ~/bit
    environment:
      NPM_CONFIG_PREFIX: ~/.npm-global
      BITSRC_ENV: stg
    parallelism: 4
    steps:
      -
        attach_workspace:
          at: ./
      -
        run: 'sudo npm i -g yarn'
      -
        run: 'echo ''export PATH=~/.npm-global/bin:$PATH'' >> $BASH_ENV'
      -
        run:
          name: 'save SHA to a file'
          command: 'echo $CIRCLE_SHA1 > .circle-sha'
      -
        run:
          name: 'create global npm directory (to avoid using sudo for npm link)'
          command: 'mkdir ~/.npm-global'
      -
        restore_cache:
          key: bitsrc-ssh-key3
      -
        restore_cache:
          key: bitsrc-registry-stg4
      -
        restore_cache:
          keys:
            - 'builded-{{ checksum ".circle-sha" }}'
      -
        run: 'chmod 400 ~/.ssh/id_rsa'
      -
        run: 'ssh-add ~/.ssh/id_rsa'
      -
        run: 'cd bit && mkdir junit'
      -
        run:
          name: 'npm link bit-javascript to bit'
          command: 'cd bit && npm link ../bit-javascript'
      -
        run:
          name: 'npm link bit to global'
          command: 'cd bit && npm link'
      -
        run: 'bit config set analytics_reporting false'
      -
        run: 'bit config set error_reporting false'
      -
        run: 'bit config set user.name tester'
      -
        run: 'bit config set user.email ci@bitsrc.io'
      -
        run: 'bit config set hub_domain hub-stg.bitsrc.io'
      -
        run:
          name: 'Run e2e tests'
          command: 'cd bit && circleci tests glob "e2e/**/*.e2e*.js" | circleci tests split --split-by=timings | xargs -n 1 npm run mocha-circleci'
          environment:
            MOCHA_FILE: junit/e2e-test-results.xml
          when: always
      -
        store_test_results:
          path: bit/junit
      -
        store_artifacts:
          path: bit/junit
      -
        store_artifacts:
          path: ~/Library/Caches/Bit/logs/debug.log
workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - set_ssh_key
      - set_bitsrc_registry
      -
        install_npm_deps:
          requires:
            - checkout_code
      -
        install_bit_javascript_npm_deps:
          requires:
            - checkout_code
      -
        build:
          requires:
            - install_npm_deps
      -
        build_bit_javascript:
          requires:
            - install_bit_javascript_npm_deps
      -
        unit_test:
          requires:
            - build
      -
        unit_test_bit_javascript:
          requires:
            - build_bit_javascript
      -
        lint:
          requires:
            - install_npm_deps
      -
        e2e_test:
          requires:
            - build
            - build_bit_javascript
            - set_ssh_key
            - set_bitsrc_registry
