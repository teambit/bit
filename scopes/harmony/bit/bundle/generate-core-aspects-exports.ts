import camelcase from 'camelcase';
import { getCoreAspectName, getCoreAspectPackageName } from '@teambit/aspect-loader';
import fs from 'fs-extra';
import { join } from 'path';

import { coreAspectsIds } from '../core-aspects-ids';

const FILE_NAME = 'core-aspects-exports.ts';
// const filePath = join('..', FILE_NAME);
// TODO: make it not hard coded
const filePath = join('/Users/giladshoham/dev/bit/bit/scopes/harmony/bit', FILE_NAME);

export function generateCoreAspectsBarrelFile() {
  const exports = generateExports();
  const autoGeneratedMessage = `// This file is auto generated by generate-core-aspects-exports.ts`;
  const content = `${autoGeneratedMessage}\n${exports}`;
  return fs.outputFile(filePath, content);
}

function generateExports(): string {
  const exportsLines = coreAspectsIds.map((id) => {
    const name = getCoreAspectName(id);
    const packageName = getCoreAspectPackageName(id);
    return generateOneExport(name, packageName);
  });
  exportsLines.push(generateOneExport('legacy', '@teambit/legacy'));
  exportsLines.push(generateOneExport('harmony', '@teambit/harmony'));
  return exportsLines.join('\n');
}

function generateOneExport(name, packageName) {
  return `export * as ${camelcase(name)} from '${packageName}';`;
}
