{
  "name": "@teambit/legacy",
  "version": "1.0.770",
  "license": "Apache-2.0",
  "main": "./dist/api.js",
  "preferGlobal": true,
  "private": false,
  "files": [
    "/dist"
  ],
  "engines": {
    "node": ">=12.22.0"
  },
  "lint-staged": {
    "*.{ts,js,jsx,tsx,css,scss,md,mdx}": [
      "prettier --write",
      "git add"
    ]
  },
  "pkg": {
    "assets": [
      "dist/analytics/analytics-sender.js",
      "dist/specs-runner/worker.js"
    ]
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/teambit/bit"
  },
  "keywords": [
    "bit",
    "components",
    "collaboration",
    "web",
    "react",
    "react-components",
    "angular",
    "angular-components"
  ],
  "scripts": {
    "dev-link": "node ./scripts/establish-dev-link.js $1",
    "dev-link:windows": "node ./scripts/establish-dev-link-windows.js $1",
    "ts-coverage": "type-coverage",
    "check-types": "tsc",
    "ts-watch": "tsc -w",
    "lint:only": "eslint \"{e2e,scopes,components}/**/*.{ts,tsx}\"",
    "lint": "tsc && eslint \"{e2e,scopes,components}/**/*.{ts,tsx}\"",
    "lint:table": "eslint \"{e2e,scopes,components}/**/*.{ts,tsx}\" --format table",
    "lint:html": "eslint \"{e2e,scopes,components}/**/*.{ts,tsx}\" --format html -o eslint-report.html",
    "lint-circle": "eslint \"{e2e,scopes,components}/**/*.{ts,tsx}\" --format junit -o junit/eslint-results.xml",
    "lint:fix": "eslint \"{e2e,scopes,components}/**/*.{ts,tsx}\" --fix",
    "lint-full": "./scripts/validate-import-named-aspects.sh && ./scripts/validate-no-ramda.sh && node scripts/validate-pkg-exist-in-pkg-json.js && npm run lint",
    "format": "prettier \"{e2e,scopes,components}/**/*.{ts,js,jsx,css,scss,tsx,md,mdx}\" --write",
    "prettier:check": "prettier --list-different \"{e2e,scopes,components}/**/*.{ts,js,jsx,css,scss,tsx,md,mdx}\"",
    "test:extensions": "mocha --require ./babel-register './scopes/**/*.spec.ts'",
    "mocha-circleci": "cross-env NODE_OPTIONS='--no-warnings --max-old-space-size=5000' registry-mock prepare && mocha --require ./babel-register --reporter mocha-multi-reporters --reporter-options configFile=mocha-multi-reporters-config.json --colors",
    "e2e-test": "registry-mock prepare && cross-env NODE_OPTIONS=--no-warnings mocha --require ./babel-register './e2e/**/*.e2e*.ts'",
    "e2e-test:debug": "npm run e2e-test --debug --keep-envs",
    "e2e-test-circle": "cross-env NODE_OPTIONS='--no-warnings --max-old-space-size=5000' mocha --require ./babel-register --reporter mocha-multi-reporters --reporter-options configFile=mocha-multi-reporters-config.json --colors './e2e/**/*.e2e*.ts'",
    "performance-test": "mocha --require ./babel-register ./e2e/performance/*.performance*.ts",
    "performance-test:debug": "npm run performance-test --debug --keep-envs",
    "performance-test-circle": "mocha --require ./babel-register --reporter mocha-multi-reporters --reporter-options configFile=mocha-multi-reporters-config.json --colors ./e2e/performance/*.performance*.ts",
    "bit-hub-test-circle": "mocha --require ./babel-register --reporter mocha-multi-reporters --reporter-options configFile=mocha-multi-reporters-config.json --colors ./e2e/bit-hub/*.ts",
    "setup": "bit install &&  bit compile",
    "full-setup": "rm -rf node_modules/.bin/bit && bit install && husky install && bit compile",
    "full-setup:bbit": "rm -rf node_modules/.bin/bbit && bbit install && husky install && bbit compile",
    "full-setup:windows": "bit install && husky install && bit compile",
    "full-setup:windows:bbit": "rm -rf node_modules/.bin && bbit install && npx husky install && echo 'please run `bbit compile`'",
    "husky:install": "husky install",
    "build-centos-image": "docker build ./scripts/linux/centos -t centos-rpm",
    "build-debian-image": "docker build ./scripts/linux/debian -t debian-deb",
    "doc-gen": "node ./scripts/doc-generator.js",
    "pkg": "pkg bin/bit.js --targets node10 --out-path releases/ --options --no-warnings --config package.json",
    "pkg:linux": "pkg bin/bit.js --targets node10-linux-x64 --out-path releases/linux --options --no-warnings --config package.json",
    "pkg:mac": "pkg bin/bit.js --targets node10-macos-x64 --out-path releases/mac --options --no-warnings --config package.json",
    "pkg:windows": "pkg bin/bit.js --targets node10-win-x64 --out-path releases/windows --options --no-warnings --config package.json",
    "pkg:all": "pkg bin/bit.js --targets node10-macos-x64,node10-win-x64,node10-linux-x64 --out-path releases/ --options --no-warnings --config package.json",
    "pre-release": "gh-release -a releases/bit-legacy-linux,releases/bit-legacy-win.exe,releases/bit-legacy-macos --prerelease",
    "release": "gh-release -a releases/bit-legacy-linux,releases/bit-legacy-win.exe,releases/bit-legacy-macos",
    "release:circle": "gh-release -a releases/bit-legacy-linux,releases/bit-legacy-win.exe,releases/bit-legacy-macos -y",
    "pre-release:circle": "gh-release -a releases/bit-legacy-linux,releases/bit-legacy-win.exe,releases/bit-legacy-macos -y --prerelease",
    "pre-release:inc-pack": "npm run pkg:all && npm run pre-release",
    "release:inc-pack": "npm run pkg:all && npm run release",
    "brew-bump:dry-run": "BIT_VERSION=$(cat ./package.json | jq .version -r) && brew bump-formula-pr bit --url='https://registry.npmjs.org/bit-bin/-/bit-bin-${BIT_VERSION}.tgz' --message='version bump' --dry-run",
    "brew-bump": "BIT_VERSION=$(cat ./package.json | jq .version -r) && brew bump-formula-pr bit --url='https://registry.npmjs.org/bit-bin/-/bit-bin-${BIT_VERSION}.tgz' --message='version bump'",
    "assert:master": "node ./scripts/assert-master.js",
    "nightly": "npm run assert:master && git tag -d manual-nightly && git push --delete origin manual-nightly && git tag manual-nightly && git push origin manual-nightly",
    "generate-cli-reference": "bit cli generate > scopes/harmony/cli-reference/cli-reference.mdx && prettier scopes/harmony/cli-reference/cli-reference.mdx --write",
    "generate-cli-reference-json": "bit cli generate --json > scopes/harmony/cli-reference/cli-reference.json",
    "generate-cli-reference-docs": "bit cli generate --docs > scopes/harmony/cli-reference/cli-reference.docs.mdx",
    "lint-staged": "lint-staged"
  },
  "dependencies": {},
  "devDependencies": {},
  "pnpm": {
    "neverBuiltDependencies": [
      "core-js"
    ]
  }
}
