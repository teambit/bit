{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Configuration file of the Bit workspace.",
  "description": "This is the main configuration file of your bit workspace. for full documentation, please see: https://docs.bit.dev/configuration",
  "type": "object",
  "properties": {
    "teambit.bit/workspace": {
      "description": "Main configuration of the Bit workspace.",
      "type": "object",
      "properties": {
        "name": {
          "description": "the name of the component workspace. used for development purposes.",
          "type": "string"
        },
        "icon": {
          "description": "set the icon url to be shown on the Bit server.",
          "type": "string"
        },
        "defaultOwner": {
          "description": "applies only on bit.dev. configure the main owner of your workspace.",
          "type": "string"
        },
        "defaultScope": {
          "description": "set the default scope when there is no matching for the component in the components array.",
          "type": "string"
        },
        "defaultDirectory": {
          "description": "set the default directory when there is no matching for the component in the components array.",
          "type": "string"
        },
        "vendorDirectory": {
          "description": "",
          "type": "string"
        }
      },
      "required": ["defaultScope"]
    },
    "teambit.bit/dependency-resolver": {
      "description": "Main configuration for component dependency resolution.",
      "type": "object",
      "properties": {
        "packageManager": {
          "description": "main configuration for bit's component dependency resolution.",
          "type": "string",
          "examples": ["teambit.bit/pnpm"]
        },
        "strictPeerDependencies": {
          "description": "If true, then Bit will add the '--strict-peer-dependencies' option when invoking package managers. This causes 'bit install' to fail if there are unsatisfied peer dependencies, which is an invalid state that can cause build failures or incompatible dependency versions. (For historical reasons, JavaScript package managers generally do not treat this invalid state as an error.) The default value is false to avoid legacy compatibility issues. It is strongly recommended to set strictPeerDependencies=true.",
          "type": "boolean",
          "default": false
        },
        "extraArgs": {
          "description": "map of extra arguments to pass to the configured package manager upon the installation of dependencies.",
          "type": "array"
        },
        "policy": {
          "description": "Dependency type is defined by the file that import it. For example, library will be devDependency when the file that imports it is a test file.",
          "type": "object",
          "properties": {
            "dependencies": {
              "type": "object"
            },
            "devDependencies": {
              "type": "object"
            },
            "peerDependencies": {
              "type": "object"
            }
          }
        }
      },
      "required": ["packageManager"]
    },
    "teambit.bit/react": {
      "description": "apply the react environment on components.",
      "type": "object",
      "properties": {
        "reactVersion": {
          "description": "sets react version.",
          "type": "string",
          "default": ">=16.0.0",
          "examples": [">=16.0.0", ">=15.0.0"]
        }
      }
    },
    "teambit.bit/variants": {
      "description": "Workspace variants allow to set different subsets of configuration for components in your workspace. This is extremely useful for upgrading, aligning and building components with a new set of dependencies.",
      "type": "object",
      "properties": {
        "*": {
          "description": "Any directory of components",
          "type": "object",
          "properties": {
            "propagate": {
              "description": "",
              "type": "boolean"
            },
            "teambit.bit/react": {
              "description": "apply the react environment on components.",
              "type": "object",
              "properties": {
                "typescript": {
                  "description": "turn on typescript compiler.",
                  "type": "boolean"
                },
                "root": {
                  "description": "root component is the one to be deployed and served.",
                  "type": "string"
                },
                "version": {
                  "description": "sets react version. This will add react and @types/react (in case typescript is turned on) as peer dependencies with this SemVer.",
                  "type": "string",
                  "default": ">=16.0.0",
                  "examples": [">=16.0.0", ">=15.0.0"]
                },
                "defaultScope": {
                  "description": "set the collection of these components",
                  "type": "string"
                }
              }
            },
            "teambit.bit/node": {
              "description": "apply the node environment on components.",
              "type": "object",
              "properties": {
                "defaultScope": {
                  "description": "set the collection of these components",
                  "type": "string"
                }
              }
            },
            "teambit.bit/flows": {
              "description": "main configuration for handling the build process of components.",
              "type": "object",
              "properties": {
                "tasks": {
                  "description": "configure build tasks. configuration of build tasks is basically a map of `task name` pointed to an array of tasks. each task can be either a bash command or an extension which exposes a task. reserved task names: build, test, runs on pre-tag.",
                  "type": "object",
                  "properties": {
                    "build": {
                      "type": "array",
                      "default": ["teambit.bit/react:build", "mv dist dist-copy"],
                      "examples": [["teambit.bit/react:build", "mv dist dist-copy"]]
                    },
                    "test": {
                      "type": "array",
                      "default": ["mocha ."],
                      "examples": [["mocha ."]]
                    },
                    "deploy": {
                      "type": "array",
                      "default": ["firebase deploy"],
                      "examples": [["firebase deploy"]]
                    }
                  }
                }
              }
            },
            "teambit.bit/pkg": {
              "description": "",
              "type": "object",
              "properties": {
                "packageJson": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "required": []
    }
  },
  "required": ["teambit.bit/workspace", "teambit.bit/dependency-resolver"]
}
